# Generated by Django 4.2.7 on 2024-10-22 14:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('room_reserve', '0003_meeting'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Event Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('event_type', models.CharField(choices=[('lesson_schedule', 'Lesson Schedule'), ('event', 'Event')], max_length=50, verbose_name='Event Type')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
            ],
        ),
        migrations.CreateModel(
            name='Lecturers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, unique=True, verbose_name='Email')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='Department')),
            ],
        ),
        migrations.CreateModel(
            name='RoomEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_type', models.CharField(choices=[('projector', 'Projector'), ('sink', 'Sink'), ('whiteboard', 'Whiteboard'), ('interactive_whiteboard', 'Interactive Whiteboard'), ('computer', 'Computer'), ('wireless_microphone', 'Wireless Microphone'), ('visualizer', 'Visualizer'), ('internet_access', 'Internet Access'), ('auditory_desks', 'Auditory Desks'), ('seating_places', 'Seating Places'), ('flipchart', 'Flipchart'), ('shower', 'Shower'), ('acid_resistant_tables', 'Acid-Resistant Tables'), ('server', 'Server'), ('network_devices', 'Network Devices')], max_length=50, verbose_name='Equipment Type')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Room Equipment',
                'verbose_name_plural': 'Room Equipment',
            },
        ),
        migrations.RemoveField(
            model_name='room',
            name='building_name',
        ),
        migrations.AddField(
            model_name='meeting',
            name='capacity',
            field=models.IntegerField(blank=True, null=True, verbose_name='meeting capacity'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='created at'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='description',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='meeting',
            name='is_updated',
            field=models.BooleanField(default=True, verbose_name='is updated'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='meeting_type',
            field=models.CharField(blank=True, choices=[('meeting', 'meeting'), ('classgroup', 'classgroup')], max_length=50, null=True, verbose_name='meeting type'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='modified_at',
            field=models.DateTimeField(auto_now=True, verbose_name='modified at'),
        ),
        migrations.AddField(
            model_name='room',
            name='building_name_en',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='building name_en'),
        ),
        migrations.AddField(
            model_name='room',
            name='building_name_pl',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='building name_pl'),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='name_en',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='name en'),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='name_pl',
            field=models.CharField(blank=True, max_length=80, null=True, verbose_name='name pl'),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='room_reserve.room', verbose_name='room number'),
        ),
        migrations.AddConstraint(
            model_name='roomequipment',
            constraint=models.UniqueConstraint(fields=('equipment_type',), name='unique_equipment_type'),
        ),
        migrations.AddField(
            model_name='event',
            name='meetings',
            field=models.ManyToManyField(blank=True, to='room_reserve.meeting', verbose_name='Meetings'),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='room_reserve.lecturers', verbose_name='Organizer'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='lecturers',
            field=models.ManyToManyField(blank=True, to='room_reserve.lecturers', verbose_name='Lecturers'),
        ),
        migrations.AddField(
            model_name='room',
            name='room_equipment',
            field=models.ManyToManyField(blank=True, to='room_reserve.roomequipment', verbose_name='equipment'),
        ),
    ]
